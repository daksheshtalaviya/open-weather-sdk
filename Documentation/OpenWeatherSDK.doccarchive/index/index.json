{"interfaceLanguages":{"occ":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/dklog\/init","title":"init","type":"method"}],"path":"\/documentation\/openweathersdk\/dklog","title":"DKLog","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weathersdkversionnumber","title":"WeatherSDKVersionNumber","type":"var"},{"path":"\/documentation\/openweathersdk\/weathersdkversionstring","title":"WeatherSDKVersionString","type":"var"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/accepted","title":"HTTPStatusCodeAccepted","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/alreadyreported","title":"HTTPStatusCodeAlreadyReported","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/badgateway","title":"HTTPStatusCodeBadGateway","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/badrequest","title":"HTTPStatusCodeBadRequest","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/bandwidthlimitexceeded","title":"HTTPStatusCodeBandwidthLimitExceeded","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/blockedbywindowsparentalcontrols","title":"HTTPStatusCodeBlockedByWindowsParentalControls","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/conflict","title":"HTTPStatusCodeConflict","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/continue","title":"HTTPStatusCodeContinue","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/created","title":"HTTPStatusCodeCreated","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/earlyhints","title":"HTTPStatusCodeEarlyHints","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/expectationfailed","title":"HTTPStatusCodeExpectationFailed","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/faileddependency","title":"HTTPStatusCodeFailedDependency","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/forbidden","title":"HTTPStatusCodeForbidden","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/found","title":"HTTPStatusCodeFound","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/gatewaytimeout","title":"HTTPStatusCodeGatewayTimeout","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/gone","title":"HTTPStatusCodeGone","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/httpversionnotsupported","title":"HTTPStatusCodeHTTPVersionNotSupported","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/iislogintimeout","title":"HTTPStatusCodeIISLoginTimeout","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/iisretrywith","title":"HTTPStatusCodeIISRetryWith","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/imateapot","title":"HTTPStatusCodeImATeapot","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/imused","title":"HTTPStatusCodeIMUsed","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/insufficientstorage","title":"HTTPStatusCodeInsufficientStorage","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/internalservererror","title":"HTTPStatusCodeInternalServerError","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/lengthrequired","title":"HTTPStatusCodeLengthRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/locked","title":"HTTPStatusCodeLocked","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/loopdetected","title":"HTTPStatusCodeLoopDetected","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/methodnotallowed","title":"HTTPStatusCodeMethodNotAllowed","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/misdirectedrequest","title":"HTTPStatusCodeMisdirectedRequest","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/movedpermanently","title":"HTTPStatusCodeMovedPermanently","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/multistatus","title":"HTTPStatusCodeMultiStatus","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/multiplechoices","title":"HTTPStatusCodeMultipleChoices","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/networkauthenticationrequired","title":"HTTPStatusCodeNetworkAuthenticationRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/networkconnecttimeouterror","title":"HTTPStatusCodeNetworkConnectTimeoutError","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxclientclosedrequest","title":"HTTPStatusCodeNginxClientClosedRequest","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxhttptohttps","title":"HTTPStatusCodeNginxHTTPToHTTPS","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxnoresponse","title":"HTTPStatusCodeNginxNoResponse","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxsslcertificateerror","title":"HTTPStatusCodeNginxSSLCertificateError","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxsslcertificaterequired","title":"HTTPStatusCodeNginxSSLCertificateRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nocontent","title":"HTTPStatusCodeNoContent","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nonauthoritativeinformation","title":"HTTPStatusCodeNonAuthoritativeInformation","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notacceptable","title":"HTTPStatusCodeNotAcceptable","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notextended","title":"HTTPStatusCodeNotExtended","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notfound","title":"HTTPStatusCodeNotFound","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notimplemented","title":"HTTPStatusCodeNotImplemented","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notmodified","title":"HTTPStatusCodeNotModified","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/ok","title":"HTTPStatusCodeOK","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/partialcontent","title":"HTTPStatusCodePartialContent","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/payloadtoolarge","title":"HTTPStatusCodePayloadTooLarge","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/paymentrequired","title":"HTTPStatusCodePaymentRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/permanentredirect","title":"HTTPStatusCodePermanentRedirect","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/preconditionfailed","title":"HTTPStatusCodePreconditionFailed","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/preconditionrequired","title":"HTTPStatusCodePreconditionRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/processing","title":"HTTPStatusCodeProcessing","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/proxyauthenticationrequired","title":"HTTPStatusCodeProxyAuthenticationRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/rangenotsatisfiable","title":"HTTPStatusCodeRangeNotSatisfiable","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/requestheaderfieldstoolarge","title":"HTTPStatusCodeRequestHeaderFieldsTooLarge","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/requesttimeout","title":"HTTPStatusCodeRequestTimeout","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/resetcontent","title":"HTTPStatusCodeResetContent","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/seeother","title":"HTTPStatusCodeSeeOther","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/serviceunavailable","title":"HTTPStatusCodeServiceUnavailable","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/siteisfrozen","title":"HTTPStatusCodeSiteIsFrozen","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/switchingprotocols","title":"HTTPStatusCodeSwitchingProtocols","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/temporaryredirect","title":"HTTPStatusCodeTemporaryRedirect","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/tokenexpired","title":"HTTPStatusCodeTokenExpired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/tooearly","title":"HTTPStatusCodeTooEarly","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/toomanyrequests","title":"HTTPStatusCodeTooManyRequests","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/unauthorized","title":"HTTPStatusCodeUnauthorized","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/unavailableforlegalreasons","title":"HTTPStatusCodeUnavailableForLegalReasons","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/unprocessableentity","title":"HTTPStatusCodeUnprocessableEntity","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/unsupportedmediatype","title":"HTTPStatusCodeUnsupportedMediaType","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/upgraderequired","title":"HTTPStatusCodeUpgradeRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/uritoolong","title":"HTTPStatusCodeURITooLong","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/useproxy","title":"HTTPStatusCodeUseProxy","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/variantalsonegotiates","title":"HTTPStatusCodeVariantAlsoNegotiates","type":"case"}],"path":"\/documentation\/openweathersdk\/httpstatuscode","title":"HTTPStatusCode","type":"enum"}],"path":"\/documentation\/openweathersdk","title":"OpenWeatherSDK","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/compositetrustevaluator\/init(evaluators:)","title":"init(evaluators: [ServerTrustEvaluating])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/compositetrustevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/openweathersdk\/compositetrustevaluator","title":"CompositeTrustEvaluator","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/dklog\/setmode(_:)","title":"static func setMode(Mode)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/dklog\/mode\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/openweathersdk\/dklog\/mode\/release","title":"case release","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/dklog\/mode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/dklog\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/dklog\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/dklog\/mode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/dklog\/mode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openweathersdk\/dklog\/mode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/dklog\/mode","title":"DKLog.Mode","type":"enum"}],"path":"\/documentation\/openweathersdk\/dklog","title":"DKLog","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/defaulttrustevaluator\/init(validatehost:)","title":"init(validateHost: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/defaulttrustevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/openweathersdk\/defaulttrustevaluator","title":"DefaultTrustEvaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/disabledevaluator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/disabledevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/openweathersdk\/disabledevaluator","title":"DisabledEvaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/forecastparameter\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/forecastparameter\/appid","title":"var appid: String","type":"property"},{"path":"\/documentation\/openweathersdk\/forecastparameter\/cnt","title":"var cnt: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/forecastparameter\/lat","title":"var lat: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/forecastparameter\/lon","title":"var lon: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/forecastparameter\/q","title":"var q: String?","type":"property"}],"path":"\/documentation\/openweathersdk\/forecastparameter","title":"ForecastParameter","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/openweathersdk\/configure(withapikey:)","title":"static func configure(withAPIKey: String)","type":"method"},{"path":"\/documentation\/openweathersdk\/openweathersdk\/isvalidapikey()","title":"static func isValidAPIKey() -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/openweathersdk\/logmode(_:)","title":"static func logMode(DKLog.Mode)","type":"method"}],"path":"\/documentation\/openweathersdk\/openweathersdk","title":"OpenWeatherSDK","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/pinnedcertificatestrustevaluator\/init(certificates:acceptselfsignedcertificates:performdefaultvalidation:validatehost:)","title":"init(certificates: [SecCertificate], acceptSelfSignedCertificates: Bool, performDefaultValidation: Bool, validateHost: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/pinnedcertificatestrustevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/openweathersdk\/pinnedcertificatestrustevaluator","title":"PinnedCertificatesTrustEvaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/publickeystrustevaluator\/init(keys:performdefaultvalidation:validatehost:)","title":"init(keys: [SecKey], performDefaultValidation: Bool, validateHost: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/publickeystrustevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/openweathersdk\/publickeystrustevaluator","title":"PublicKeysTrustEvaluator","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/init(rawvalue:)","title":"init(rawValue: CFOptionFlags)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/rawvalue","title":"let rawValue: CFOptionFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/any","title":"static let any: RevocationTrustEvaluator.Options","type":"property"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/crl","title":"static let crl: RevocationTrustEvaluator.Options","type":"property"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/networkaccessdisabled","title":"static let networkAccessDisabled: RevocationTrustEvaluator.Options","type":"property"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/ocsp","title":"static let ocsp: RevocationTrustEvaluator.Options","type":"property"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/prefercrl","title":"static let preferCRL: RevocationTrustEvaluator.Options","type":"property"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/requirepositiveresponse","title":"static let requirePositiveResponse: RevocationTrustEvaluator.Options","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/options","title":"RevocationTrustEvaluator.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/init(performdefaultvalidation:validatehost:options:)","title":"init(performDefaultValidation: Bool, validateHost: Bool, options: Options)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/revocationtrustevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/openweathersdk\/revocationtrustevaluator","title":"RevocationTrustEvaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/servertrustmanager\/init(allhostsmustbeevaluated:evaluators:)","title":"init(allHostsMustBeEvaluated: Bool, evaluators: [String : ServerTrustEvaluating])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/servertrustmanager\/allhostsmustbeevaluated","title":"let allHostsMustBeEvaluated: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/servertrustmanager\/evaluators","title":"let evaluators: [String : ServerTrustEvaluating]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/servertrustmanager\/servertrustevaluator(forhost:)","title":"func serverTrustEvaluator(forHost: String) throws -> ServerTrustEvaluating?","type":"method"}],"path":"\/documentation\/openweathersdk\/servertrustmanager","title":"ServerTrustManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/init(arrayencoding:boolencoding:dataencoding:dateencoding:keyencoding:spaceencoding:allowedcharacters:)","title":"init(arrayEncoding: ArrayEncoding, boolEncoding: BoolEncoding, dataEncoding: DataEncoding, dateEncoding: DateEncoding, keyEncoding: KeyEncoding, spaceEncoding: SpaceEncoding, allowedCharacters: CharacterSet)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/allowedcharacters","title":"var allowedCharacters: CharacterSet","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/arrayencoding-swift.property","title":"let arrayEncoding: ArrayEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/boolencoding-swift.property","title":"let boolEncoding: BoolEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dataencoding-swift.property","title":"let dataEncoding: DataEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dateencoding-swift.property","title":"let dateEncoding: DateEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/keyencoding-swift.property","title":"let keyEncoding: KeyEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/spaceencoding-swift.property","title":"let spaceEncoding: SpaceEncoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/encode(_:)-6jqcw","title":"func encode(Encodable) throws -> String","type":"method"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/encode(_:)-y9rs","title":"func encode(Encodable) throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/arrayencoding-swift.enum\/brackets","title":"case brackets","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/arrayencoding-swift.enum\/nobrackets","title":"case noBrackets","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/arrayencoding-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/arrayencoding-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/arrayencoding-swift.enum","title":"URLEncodedFormEncoder.ArrayEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/boolencoding-swift.enum\/literal","title":"case literal","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/boolencoding-swift.enum\/numeric","title":"case numeric","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/boolencoding-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/boolencoding-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/boolencoding-swift.enum","title":"URLEncodedFormEncoder.BoolEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dataencoding-swift.enum\/base64","title":"case base64","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dataencoding-swift.enum\/custom(_:)","title":"case custom((Data) throws -> String)","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dataencoding-swift.enum\/deferredtodata","title":"case deferredToData","type":"case"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dataencoding-swift.enum","title":"URLEncodedFormEncoder.DataEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dateencoding-swift.enum\/custom(_:)","title":"case custom((Date) throws -> String)","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dateencoding-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dateencoding-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dateencoding-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dateencoding-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dateencoding-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/dateencoding-swift.enum","title":"URLEncodedFormEncoder.DateEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/error\/invalidrootobject(_:)","title":"case invalidRootObject(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/error\/asapierror","title":"var asAPIError: APIError?","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/error\/asapierror(orfailwith:file:line:)","title":"func asAPIError(orFailWith: () -> String, file: StaticString, line: UInt) -> APIError","type":"method"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/error","title":"URLEncodedFormEncoder.Error","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/keyencoding-swift.enum\/capitalized","title":"case capitalized","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/keyencoding-swift.enum\/converttokebabcase","title":"case convertToKebabCase","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/keyencoding-swift.enum\/converttosnakecase","title":"case convertToSnakeCase","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/keyencoding-swift.enum\/custom(_:)","title":"case custom((String) -> String)","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/keyencoding-swift.enum\/lowercased","title":"case lowercased","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/keyencoding-swift.enum\/uppercased","title":"case uppercased","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/keyencoding-swift.enum\/usedefaultkeys","title":"case useDefaultKeys","type":"case"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/keyencoding-swift.enum","title":"URLEncodedFormEncoder.KeyEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/spaceencoding-swift.enum\/percentescaped","title":"case percentEscaped","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/spaceencoding-swift.enum\/plusreplaced","title":"case plusReplaced","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/spaceencoding-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/spaceencoding-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder\/spaceencoding-swift.enum","title":"URLEncodedFormEncoder.SpaceEncoding","type":"enum"}],"path":"\/documentation\/openweathersdk\/urlencodedformencoder","title":"URLEncodedFormEncoder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weatherparameter\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weatherparameter\/appid","title":"var appid: String","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherparameter\/lat","title":"var lat: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherparameter\/lon","title":"var lon: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherparameter\/q","title":"var q: String?","type":"property"}],"path":"\/documentation\/openweathersdk\/weatherparameter","title":"WeatherParameter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weatherservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weatherservice\/getweatherfortoday(latitude:longitude:completion:)","title":"func getWeatherForToday(latitude: Double, longitude: Double, completion: (Result<WeatherData, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openweathersdk\/weatherservice\/getweatherfortoday(location:completion:)","title":"func getWeatherForToday(location: String, completion: (Result<WeatherData, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openweathersdk\/weatherservice\/getweatherforecast(latitude:longitude:timestamps:completion:)","title":"func getWeatherForecast(latitude: Double, longitude: Double, timestamps: Int, completion: (Result<WeatherForecast, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openweathersdk\/weatherservice\/getweatherforecast(location:timestamps:completion:)","title":"func getWeatherForecast(location: String, timestamps: Int, completion: (Result<WeatherForecast, Error>) -> Void)","type":"method"}],"path":"\/documentation\/openweathersdk\/weatherservice","title":"WeatherService","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apiextended\/extendedtype","title":"ExtendedType","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/openweathersdk\/apiextended\/ax-swift.type.property-9l47b","title":"static var ax: APIExtension<Self>.Type","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextended\/ax-swift.property-13u6h","title":"var ax: APIExtension<Self>","type":"property"}],"title":"APIExtended Implementations","type":"groupMarker"}],"path":"\/documentation\/openweathersdk\/apiextended\/ax-swift.property-32ilz","title":"var ax: APIExtension<ExtendedType>","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/openweathersdk\/apiextended\/ax-swift.property-13u6h","title":"var ax: APIExtension<Self>","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextended\/ax-swift.type.property-9l47b","title":"static var ax: APIExtension<Self>.Type","type":"property"}],"title":"APIExtended Implementations","type":"groupMarker"}],"path":"\/documentation\/openweathersdk\/apiextended\/ax-swift.type.property-1fhiy","title":"static var ax: APIExtension<ExtendedType>.Type","type":"property"}],"path":"\/documentation\/openweathersdk\/apiextended","title":"APIExtended","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/parameterencoding\/encode(_:with:)","title":"func encode(URLRequestConvertible, with: Parameters?) throws -> URLRequest","type":"method"}],"path":"\/documentation\/openweathersdk\/parameterencoding","title":"ParameterEncoding","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/servertrustevaluating\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/openweathersdk\/servertrustevaluating","title":"ServerTrustEvaluating","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlconvertible\/asurl()","title":"func asURL() throws -> URL","type":"method"}],"path":"\/documentation\/openweathersdk\/urlconvertible","title":"URLConvertible","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlrequestconvertible\/urlrequest","title":"var urlRequest: URLRequest?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlrequestconvertible\/asurlrequest()","title":"func asURLRequest() throws -> URLRequest","type":"method"}],"path":"\/documentation\/openweathersdk\/urlrequestconvertible","title":"URLRequestConvertible","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apiextension\/certificatedata","title":"var certificateData: [Data]","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextension\/certificates-4gb67","title":"var certificates: [SecCertificate]","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextension\/certificates-4ix15","title":"var certificates: [SecCertificate]","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextension\/data","title":"var data: [Data]","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextension\/issuccess-3mcc1","title":"var isSuccess: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextension\/issuccess-auk4","title":"var isSuccess: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextension\/publickey","title":"var publicKey: SecKey?","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextension\/publickeys-1tojv","title":"var publicKeys: [SecKey]","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextension\/publickeys-8eeup","title":"var publicKeys: [SecKey]","type":"property"},{"path":"\/documentation\/openweathersdk\/apiextension\/publickeys-8pjsn","title":"var publicKeys: [SecKey]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apiextension\/apply(policy:)","title":"func apply(policy: SecPolicy) throws -> SecTrust","type":"method"},{"path":"\/documentation\/openweathersdk\/apiextension\/paths(forresourcesoftypes:)","title":"func paths(forResourcesOfTypes: [String]) -> [String]","type":"method"},{"path":"\/documentation\/openweathersdk\/apiextension\/performdefaultvalidation(forhost:)","title":"func performDefaultValidation(forHost: String) throws","type":"method"},{"path":"\/documentation\/openweathersdk\/apiextension\/performvalidation(forhost:)","title":"func performValidation(forHost: String) throws","type":"method"},{"path":"\/documentation\/openweathersdk\/apiextension\/setanchorcertificates(_:)","title":"func setAnchorCertificates([SecCertificate]) throws","type":"method"},{"path":"\/documentation\/openweathersdk\/apiextension\/validate(errorproducer:)","title":"func validate(errorProducer: (_ status: OSStatus, _ result: SecTrustResultType) -> Error) throws","type":"method"},{"path":"\/documentation\/openweathersdk\/apiextension\/validate(policy:errorproducer:)","title":"func validate(policy: SecPolicy, errorProducer: (_ status: OSStatus, _ result: SecTrustResultType) -> Error) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apiextension\/default","title":"static let `default`: SecPolicy","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apiextension\/hostname(_:)","title":"static func hostname(String) -> SecPolicy","type":"method"},{"path":"\/documentation\/openweathersdk\/apiextension\/revocation(options:)","title":"static func revocation(options: RevocationTrustEvaluator.Options) throws -> SecPolicy","type":"method"}],"path":"\/documentation\/openweathersdk\/apiextension","title":"APIExtension","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apifailureresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apifailureresponse\/cod","title":"let cod: HTTPStatusCode?","type":"property"},{"path":"\/documentation\/openweathersdk\/apifailureresponse\/message","title":"let message: String?","type":"property"}],"path":"\/documentation\/openweathersdk\/apifailureresponse","title":"APIFailureResponse","type":"struct"},{"path":"\/documentation\/openweathersdk\/apiservice","title":"APIService","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/city\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/city\/coord","title":"let coord: Coord?","type":"property"},{"path":"\/documentation\/openweathersdk\/city\/country","title":"let country: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/city\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/city\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/city\/population","title":"let population: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/city\/sunrise","title":"let sunrise: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/city\/sunset","title":"let sunset: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/city\/timezone","title":"let timezone: Int?","type":"property"}],"path":"\/documentation\/openweathersdk\/city","title":"City","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/clouds\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/clouds\/all","title":"let all: Int?","type":"property"}],"path":"\/documentation\/openweathersdk\/clouds","title":"Clouds","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/coord\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/coord\/lat","title":"let lat: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/coord\/lon","title":"let lon: Double?","type":"property"}],"path":"\/documentation\/openweathersdk\/coord","title":"Coord","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheader\/init(name:value:)","title":"init(name: String, value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheader\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheader\/value","title":"let value: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheader\/defaultacceptencoding","title":"static let defaultAcceptEncoding: HTTPHeader","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheader\/defaultacceptlanguage","title":"static let defaultAcceptLanguage: HTTPHeader","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheader\/defaultuseragent","title":"static let defaultUserAgent: HTTPHeader","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheader\/accept(_:)","title":"static func accept(String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/acceptcharset(_:)","title":"static func acceptCharset(String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/acceptencoding(_:)","title":"static func acceptEncoding(String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/acceptlanguage(_:)","title":"static func acceptLanguage(String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/authorization(_:)","title":"static func authorization(String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/authorization(bearertoken:)","title":"static func authorization(bearerToken: String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/authorization(username:password:)","title":"static func authorization(username: String, password: String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/contentdisposition(_:)","title":"static func contentDisposition(String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/contentencoding(_:)","title":"static func contentEncoding(String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/contenttype(_:)","title":"static func contentType(String) -> HTTPHeader","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheader\/useragent(_:)","title":"static func userAgent(String) -> HTTPHeader","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheader\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openweathersdk\/httpheader\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheader\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/httpheader\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/httpheader","title":"HTTPHeader","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/init()","title":"init()","type":"init"},{"path":"\/documentation\/openweathersdk\/httpheaders\/init(_:)-2xnw4","title":"init([HTTPHeader])","type":"init"},{"path":"\/documentation\/openweathersdk\/httpheaders\/init(_:)-7bpka","title":"init([String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/dictionary","title":"var dictionary: [String : String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/add(_:)","title":"func add(HTTPHeader)","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/add(name:value:)","title":"func add(name: String, value: String)","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/remove(name:)","title":"func remove(name: String)","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/sorted()","title":"func sorted() -> HTTPHeaders","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/update(_:)","title":"func update(HTTPHeader)","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/update(name:value:)","title":"func update(name: String, value: String)","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/value(for:)","title":"func value(for: String) -> String?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/subscript(_:)-628s1","title":"subscript(String) -> String?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/default","title":"static let `default`: HTTPHeaders","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheaders\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheaders\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheaders\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheaders\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheaders\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheaders\/underestimatedcount-2yhjf","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/map(_:)-55fsf","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/subscript(_:)-20eq2","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/openweathersdk\/httpheaders\/subscript(_:)-4qyt1","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/openweathersdk\/httpheaders\/subscript(_:)-574c0","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/openweathersdk\/httpheaders\/subscript(_:)-5isn0","title":"subscript(Int) -> HTTPHeader","type":"subscript"}],"path":"\/documentation\/openweathersdk\/httpheaders\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openweathersdk\/httpheaders\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/init(arrayliteral:)","title":"init(arrayLiteral: HTTPHeader...)","type":"init"}],"path":"\/documentation\/openweathersdk\/httpheaders\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, String)...)","type":"init"}],"path":"\/documentation\/openweathersdk\/httpheaders\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheaders\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/openweathersdk\/httpheaders\/underestimatedcount-m5j","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpheaders\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/flatmap(_:)-3u5a5","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/flatmap(_:)-7mr8t","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/makeiterator()","title":"func makeIterator() -> IndexingIterator<[HTTPHeader]>","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/map(_:)-923d4","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/sorted(using:)-2myg7","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/sorted(using:)-7c8yg","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openweathersdk\/httpheaders\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/openweathersdk\/httpheaders\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/httpheaders","title":"HTTPHeaders","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpmethod\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpmethod\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpmethod\/connect","title":"static let connect: HTTPMethod","type":"property"},{"path":"\/documentation\/openweathersdk\/httpmethod\/delete","title":"static let delete: HTTPMethod","type":"property"},{"path":"\/documentation\/openweathersdk\/httpmethod\/get","title":"static let get: HTTPMethod","type":"property"},{"path":"\/documentation\/openweathersdk\/httpmethod\/head","title":"static let head: HTTPMethod","type":"property"},{"path":"\/documentation\/openweathersdk\/httpmethod\/options","title":"static let options: HTTPMethod","type":"property"},{"path":"\/documentation\/openweathersdk\/httpmethod\/patch","title":"static let patch: HTTPMethod","type":"property"},{"path":"\/documentation\/openweathersdk\/httpmethod\/post","title":"static let post: HTTPMethod","type":"property"},{"path":"\/documentation\/openweathersdk\/httpmethod\/put","title":"static let put: HTTPMethod","type":"property"},{"path":"\/documentation\/openweathersdk\/httpmethod\/query","title":"static let query: HTTPMethod","type":"property"},{"path":"\/documentation\/openweathersdk\/httpmethod\/trace","title":"static let trace: HTTPMethod","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openweathersdk\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/httpmethod","title":"HTTPMethod","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/init(options:)","title":"init(options: JSONSerialization.WritingOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/options","title":"let options: JSONSerialization.WritingOptions","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/encode(_:with:)","title":"func encode(URLRequestConvertible, with: Parameters?) throws -> URLRequest","type":"method"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/encode(_:withjsonobject:)","title":"func encode(URLRequestConvertible, withJSONObject: Any?) throws -> URLRequest","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/default","title":"static var `default`: JSONEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/prettyprinted","title":"static var prettyPrinted: JSONEncoding","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/error\/invalidjsonobject","title":"case invalidJSONObject","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/error\/localizeddescription-7u9ci","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/jsonencoding\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/error\/asapierror","title":"var asAPIError: APIError?","type":"property"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/error\/localizeddescription-4f1sd","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/jsonencoding\/error\/asapierror(orfailwith:file:line:)","title":"func asAPIError(orFailWith: () -> String, file: StaticString, line: UInt) -> APIError","type":"method"}],"path":"\/documentation\/openweathersdk\/jsonencoding\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/jsonencoding\/error","title":"JSONEncoding.Error","type":"enum"}],"path":"\/documentation\/openweathersdk\/jsonencoding","title":"JSONEncoding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/main\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/main\/feelslike","title":"let feelsLike: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/main\/humidity","title":"let humidity: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/main\/pressure","title":"let pressure: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/main\/temp","title":"let temp: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/main\/tempmax","title":"let tempMax: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/main\/tempmin","title":"let tempMin: Double?","type":"property"}],"path":"\/documentation\/openweathersdk\/main","title":"Main","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/system\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/system\/country","title":"let country: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/system\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/system\/sunrise","title":"let sunrise: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/system\/sunset","title":"let sunset: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/system\/type","title":"let type: Int?","type":"property"}],"path":"\/documentation\/openweathersdk\/system","title":"System","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencoding\/init(destination:arrayencoding:boolencoding:)","title":"init(destination: Destination, arrayEncoding: ArrayEncoding, boolEncoding: BoolEncoding)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencoding\/arrayencoding-swift.property","title":"let arrayEncoding: ArrayEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencoding\/boolencoding-swift.property","title":"let boolEncoding: BoolEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencoding\/destination-swift.property","title":"let destination: Destination","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencoding\/encode(_:with:)","title":"func encode(URLRequestConvertible, with: Parameters?) throws -> URLRequest","type":"method"},{"path":"\/documentation\/openweathersdk\/urlencoding\/escape(_:)","title":"func escape(String) -> String","type":"method"},{"path":"\/documentation\/openweathersdk\/urlencoding\/querycomponents(fromkey:value:)","title":"func queryComponents(fromKey: String, value: Any) -> [(String, String)]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencoding\/default","title":"static var `default`: URLEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencoding\/httpbody","title":"static var httpBody: URLEncoding","type":"property"},{"path":"\/documentation\/openweathersdk\/urlencoding\/querystring","title":"static var queryString: URLEncoding","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencoding\/arrayencoding-swift.enum\/brackets","title":"case brackets","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencoding\/arrayencoding-swift.enum\/custom(_:)","title":"case custom((_ key: String, _ index: Int) -> String)","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencoding\/arrayencoding-swift.enum\/indexinbrackets","title":"case indexInBrackets","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencoding\/arrayencoding-swift.enum\/nobrackets","title":"case noBrackets","type":"case"}],"path":"\/documentation\/openweathersdk\/urlencoding\/arrayencoding-swift.enum","title":"URLEncoding.ArrayEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencoding\/boolencoding-swift.enum\/literal","title":"case literal","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencoding\/boolencoding-swift.enum\/numeric","title":"case numeric","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencoding\/boolencoding-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/urlencoding\/boolencoding-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/urlencoding\/boolencoding-swift.enum","title":"URLEncoding.BoolEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencoding\/destination-swift.enum\/httpbody","title":"case httpBody","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencoding\/destination-swift.enum\/methoddependent","title":"case methodDependent","type":"case"},{"path":"\/documentation\/openweathersdk\/urlencoding\/destination-swift.enum\/querystring","title":"case queryString","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/urlencoding\/destination-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/urlencoding\/destination-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/urlencoding\/destination-swift.enum","title":"URLEncoding.Destination","type":"enum"}],"path":"\/documentation\/openweathersdk\/urlencoding","title":"URLEncoding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weather\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weather\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/weather\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/weather\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/weather\/main","title":"let main: String?","type":"property"}],"path":"\/documentation\/openweathersdk\/weather","title":"Weather","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weatherdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weatherdata\/base","title":"let base: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/clouds","title":"let clouds: Clouds?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/cod","title":"let cod: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/coord","title":"let coord: Coord?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/dt","title":"let dt: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/dttxt","title":"let dtTxt: Date?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/main","title":"let main: Main?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/pop","title":"let pop: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/sys","title":"let sys: System?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/timezone","title":"let timezone: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/visibility","title":"let visibility: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/weather","title":"let weather: [Weather]?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherdata\/wind","title":"let wind: Wind?","type":"property"}],"path":"\/documentation\/openweathersdk\/weatherdata","title":"WeatherData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weatherforecast\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weatherforecast\/city","title":"let city: City?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherforecast\/cnt","title":"let cnt: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherforecast\/cod","title":"let cod: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherforecast\/list","title":"let list: [WeatherData]?","type":"property"},{"path":"\/documentation\/openweathersdk\/weatherforecast\/message","title":"let message: Int?","type":"property"}],"path":"\/documentation\/openweathersdk\/weatherforecast","title":"WeatherForecast","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/wind\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/wind\/deg","title":"let deg: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/wind\/gust","title":"let gust: Double?","type":"property"},{"path":"\/documentation\/openweathersdk\/wind\/speed","title":"let speed: Double?","type":"property"}],"path":"\/documentation\/openweathersdk\/wind","title":"Wind","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/weathersdkversionnumber","title":"var WeatherSDKVersionNumber: Double","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/parameters","title":"Parameters","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/unexpectedinputstreamlength\/bytesexpected","title":"var bytesExpected: UInt64","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/unexpectedinputstreamlength\/bytesread","title":"var bytesRead: UInt64","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/unexpectedinputstreamlength\/asapierror","title":"var asAPIError: APIError?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/unexpectedinputstreamlength\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/unexpectedinputstreamlength\/asapierror(orfailwith:file:line:)","title":"func asAPIError(orFailWith: () -> String, file: StaticString, line: UInt) -> APIError","type":"method"}],"path":"\/documentation\/openweathersdk\/apierror\/unexpectedinputstreamlength\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/apierror\/unexpectedinputstreamlength","title":"APIError.UnexpectedInputStreamLength","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/createurlrequestfailed(error:)","title":"case createURLRequestFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/createuploadablefailed(error:)","title":"case createUploadableFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/downloadedfilemovefailed(error:source:destination:)","title":"case downloadedFileMoveFailed(error: Error, source: URL, destination: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/explicitlycancelled","title":"case explicitlyCancelled","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/invalidurl(url:)","title":"case invalidURL(url: URLConvertible)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailed(reason:)","title":"case multipartEncodingFailed(reason: MultipartEncodingFailureReason)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/parameterencoderfailed(reason:)","title":"case parameterEncoderFailed(reason: ParameterEncoderFailureReason)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/parameterencodingfailed(reason:)","title":"case parameterEncodingFailed(reason: ParameterEncodingFailureReason)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/requestadaptationfailed(error:)","title":"case requestAdaptationFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/requestretryfailed(retryerror:originalerror:)","title":"case requestRetryFailed(retryError: Error, originalError: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailed(reason:)","title":"case responseSerializationFailed(reason: ResponseSerializationFailureReason)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responsevalidationfailed(reason:)","title":"case responseValidationFailed(reason: ResponseValidationFailureReason)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustevaluationfailed(reason:)","title":"case serverTrustEvaluationFailed(reason: ServerTrustFailureReason)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/sessiondeinitialized","title":"case sessionDeinitialized","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/sessioninvalidated(error:)","title":"case sessionInvalidated(error: Error?)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/sessiontaskfailed(error:)","title":"case sessionTaskFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/urlrequestvalidationfailed(reason:)","title":"case urlRequestValidationFailed(reason: URLRequestValidationFailureReason)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/acceptablecontenttypes","title":"var acceptableContentTypes: [String]?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/destinationurl","title":"var destinationURL: URL?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/downloadresumedata","title":"var downloadResumeData: Data?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/failedstringencoding","title":"var failedStringEncoding: String.Encoding?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/iscreateurlrequesterror","title":"var isCreateURLRequestError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/iscreateuploadableerror","title":"var isCreateUploadableError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isdownloadedfilemoveerror","title":"var isDownloadedFileMoveError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isexplicitlycancellederror","title":"var isExplicitlyCancelledError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isinvalidurlerror","title":"var isInvalidURLError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/ismultipartencodingerror","title":"var isMultipartEncodingError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isparameterencodererror","title":"var isParameterEncoderError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isparameterencodingerror","title":"var isParameterEncodingError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isrequestadaptationerror","title":"var isRequestAdaptationError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isrequestretryerror","title":"var isRequestRetryError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isresponseserializationerror","title":"var isResponseSerializationError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isresponsevalidationerror","title":"var isResponseValidationError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/isservertrustevaluationerror","title":"var isServerTrustEvaluationError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/issessiondeinitializederror","title":"var isSessionDeinitializedError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/issessioninvalidatederror","title":"var isSessionInvalidatedError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/issessiontaskerror","title":"var isSessionTaskError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/responsecode","title":"var responseCode: Int?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/responsecontenttype","title":"var responseContentType: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/sourceurl","title":"var sourceURL: URL?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/underlyingerror","title":"var underlyingError: Error?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/url","title":"var url: URL?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/urlconvertible","title":"var urlConvertible: URLConvertible?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/errormodel\/failure(_:)","title":"case failure(Codable)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/errormodel\/asapierror","title":"var asAPIError: APIError?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/errormodel\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/errormodel\/asapierror(orfailwith:file:line:)","title":"func asAPIError(orFailWith: () -> String, file: StaticString, line: UInt) -> APIError","type":"method"}],"path":"\/documentation\/openweathersdk\/apierror\/errormodel\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/apierror\/errormodel","title":"APIError.ErrorModel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/bodypartfileisdirectory(at:)","title":"case bodyPartFileIsDirectory(at: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/bodypartfilenotreachable(at:)","title":"case bodyPartFileNotReachable(at: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/bodypartfilenotreachablewitherror(aturl:error:)","title":"case bodyPartFileNotReachableWithError(atURL: URL, error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/bodypartfilesizenotavailable(at:)","title":"case bodyPartFileSizeNotAvailable(at: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/bodypartfilesizequeryfailedwitherror(forurl:error:)","title":"case bodyPartFileSizeQueryFailedWithError(forURL: URL, error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/bodypartfilenameinvalid(in:)","title":"case bodyPartFilenameInvalid(in: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/bodypartinputstreamcreationfailed(for:)","title":"case bodyPartInputStreamCreationFailed(for: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/bodyparturlinvalid(url:)","title":"case bodyPartURLInvalid(url: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/inputstreamreadfailed(error:)","title":"case inputStreamReadFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/outputstreamcreationfailed(for:)","title":"case outputStreamCreationFailed(for: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/outputstreamfilealreadyexists(at:)","title":"case outputStreamFileAlreadyExists(at: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/outputstreamurlinvalid(url:)","title":"case outputStreamURLInvalid(url: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason\/outputstreamwritefailed(error:)","title":"case outputStreamWriteFailed(error: Error)","type":"case"}],"path":"\/documentation\/openweathersdk\/apierror\/multipartencodingfailurereason","title":"APIError.MultipartEncodingFailureReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/parameterencoderfailurereason\/encoderfailed(error:)","title":"case encoderFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/parameterencoderfailurereason\/missingrequiredcomponent(_:)","title":"case missingRequiredComponent(RequiredComponent)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/parameterencoderfailurereason\/requiredcomponent\/httpmethod(rawvalue:)","title":"case httpMethod(rawValue: String)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/parameterencoderfailurereason\/requiredcomponent\/url","title":"case url","type":"case"}],"path":"\/documentation\/openweathersdk\/apierror\/parameterencoderfailurereason\/requiredcomponent","title":"APIError.ParameterEncoderFailureReason.RequiredComponent","type":"enum"}],"path":"\/documentation\/openweathersdk\/apierror\/parameterencoderfailurereason","title":"APIError.ParameterEncoderFailureReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/parameterencodingfailurereason\/customencodingfailed(error:)","title":"case customEncodingFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/parameterencodingfailurereason\/jsonencodingfailed(error:)","title":"case jsonEncodingFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/parameterencodingfailurereason\/missingurl","title":"case missingURL","type":"case"}],"path":"\/documentation\/openweathersdk\/apierror\/parameterencodingfailurereason","title":"APIError.ParameterEncodingFailureReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailurereason\/customserializationfailed(error:)","title":"case customSerializationFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailurereason\/decodingfailed(error:)","title":"case decodingFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailurereason\/inputdatanilorzerolength","title":"case inputDataNilOrZeroLength","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailurereason\/inputfilenil","title":"case inputFileNil","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailurereason\/inputfilereadfailed(at:)","title":"case inputFileReadFailed(at: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailurereason\/invalidemptyresponse(type:)","title":"case invalidEmptyResponse(type: String)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailurereason\/jsonserializationfailed(error:)","title":"case jsonSerializationFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailurereason\/stringserializationfailed(encoding:)","title":"case stringSerializationFailed(encoding: String.Encoding)","type":"case"}],"path":"\/documentation\/openweathersdk\/apierror\/responseserializationfailurereason","title":"APIError.ResponseSerializationFailureReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/responsevalidationfailurereason\/customvalidationfailed(error:)","title":"case customValidationFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responsevalidationfailurereason\/datafilenil","title":"case dataFileNil","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responsevalidationfailurereason\/datafilereadfailed(at:)","title":"case dataFileReadFailed(at: URL)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responsevalidationfailurereason\/missingcontenttype(acceptablecontenttypes:)","title":"case missingContentType(acceptableContentTypes: [String])","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responsevalidationfailurereason\/unacceptablecontenttype(acceptablecontenttypes:responsecontenttype:)","title":"case unacceptableContentType(acceptableContentTypes: [String], responseContentType: String)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/responsevalidationfailurereason\/unacceptablestatuscode(code:)","title":"case unacceptableStatusCode(code: Int)","type":"case"}],"path":"\/documentation\/openweathersdk\/apierror\/responsevalidationfailurereason","title":"APIError.ResponseValidationFailureReason","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/output\/host","title":"let host: String","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/output\/result","title":"let result: SecTrustResultType","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/output\/status","title":"let status: OSStatus","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/output\/trust","title":"let trust: SecTrust","type":"property"}],"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/output","title":"APIError.ServerTrustFailureReason.Output","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/certificatepinningfailed(host:trust:pinnedcertificates:servercertificates:)","title":"case certificatePinningFailed(host: String, trust: SecTrust, pinnedCertificates: [SecCertificate], serverCertificates: [SecCertificate])","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/customevaluationfailed(error:)","title":"case customEvaluationFailed(error: Error)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/defaultevaluationfailed(output:)","title":"case defaultEvaluationFailed(output: Output)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/hostvalidationfailed(output:)","title":"case hostValidationFailed(output: Output)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/nocertificatesfound","title":"case noCertificatesFound","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/nopublickeysfound","title":"case noPublicKeysFound","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/norequiredevaluator(host:)","title":"case noRequiredEvaluator(host: String)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/policyapplicationfailed(trust:policy:status:)","title":"case policyApplicationFailed(trust: SecTrust, policy: SecPolicy, status: OSStatus)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/publickeypinningfailed(host:trust:pinnedkeys:serverkeys:)","title":"case publicKeyPinningFailed(host: String, trust: SecTrust, pinnedKeys: [SecKey], serverKeys: [SecKey])","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/revocationcheckfailed(output:options:)","title":"case revocationCheckFailed(output: Output, options: RevocationTrustEvaluator.Options)","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/revocationpolicycreationfailed","title":"case revocationPolicyCreationFailed","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/settinganchorcertificatesfailed(status:certificates:)","title":"case settingAnchorCertificatesFailed(status: OSStatus, certificates: [SecCertificate])","type":"case"},{"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason\/trustevaluationfailed(error:)","title":"case trustEvaluationFailed(error: Error?)","type":"case"}],"path":"\/documentation\/openweathersdk\/apierror\/servertrustfailurereason","title":"APIError.ServerTrustFailureReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/urlrequestvalidationfailurereason\/bodydataingetrequest(_:)","title":"case bodyDataInGETRequest(Data)","type":"case"}],"path":"\/documentation\/openweathersdk\/apierror\/urlrequestvalidationfailurereason","title":"APIError.URLRequestValidationFailureReason","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/asapierror","title":"var asAPIError: APIError?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/asapierror(orfailwith:file:line:)","title":"func asAPIError(orFailWith: () -> String, file: StaticString, line: UInt) -> APIError","type":"method"}],"path":"\/documentation\/openweathersdk\/apierror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/apierror\/errordescription-3lagm","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/errordescription-7kxkj","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/openweathersdk\/apierror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/openweathersdk\/apierror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/apierror","title":"APIError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/alreadyreported","title":"case alreadyReported","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/badgateway","title":"case badGateway","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/badrequest","title":"case badRequest","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/bandwidthlimitexceeded","title":"case bandwidthLimitExceeded","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/blockedbywindowsparentalcontrols","title":"case blockedByWindowsParentalControls","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/conflict","title":"case conflict","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/created","title":"case created","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/earlyhints","title":"case earlyHints","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/expectationfailed","title":"case expectationFailed","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/faileddependency","title":"case failedDependency","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/forbidden","title":"case forbidden","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/found","title":"case found","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/gatewaytimeout","title":"case gatewayTimeout","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/gone","title":"case gone","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/httpversionnotsupported","title":"case httpVersionNotSupported","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/iislogintimeout","title":"case iisLoginTimeout","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/iisretrywith","title":"case iisRetryWith","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/imateapot","title":"case imATeapot","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/imused","title":"case imUsed","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/insufficientstorage","title":"case insufficientStorage","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/internalservererror","title":"case internalServerError","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/lengthrequired","title":"case lengthRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/locked","title":"case locked","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/loopdetected","title":"case loopDetected","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/methodnotallowed","title":"case methodNotAllowed","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/misdirectedrequest","title":"case misdirectedRequest","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/movedpermanently","title":"case movedPermanently","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/multistatus","title":"case multiStatus","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/multiplechoices","title":"case multipleChoices","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/networkauthenticationrequired","title":"case networkAuthenticationRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/networkconnecttimeouterror","title":"case networkConnectTimeoutError","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxclientclosedrequest","title":"case nginxClientClosedRequest","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxhttptohttps","title":"case nginxHTTPToHTTPS","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxnoresponse","title":"case nginxNoResponse","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxsslcertificateerror","title":"case nginxSSLCertificateError","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nginxsslcertificaterequired","title":"case nginxSSLCertificateRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nocontent","title":"case noContent","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nonauthoritativeinformation","title":"case nonAuthoritativeInformation","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notacceptable","title":"case notAcceptable","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notextended","title":"case notExtended","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notimplemented","title":"case notImplemented","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/notmodified","title":"case notModified","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/ok","title":"case ok","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/partialcontent","title":"case partialContent","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/payloadtoolarge","title":"case payloadTooLarge","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/paymentrequired","title":"case paymentRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/permanentredirect","title":"case permanentRedirect","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/preconditionfailed","title":"case preconditionFailed","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/preconditionrequired","title":"case preconditionRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/processing","title":"case processing","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/proxyauthenticationrequired","title":"case proxyAuthenticationRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/rangenotsatisfiable","title":"case rangeNotSatisfiable","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/requestheaderfieldstoolarge","title":"case requestHeaderFieldsTooLarge","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/requesttimeout","title":"case requestTimeout","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/resetcontent","title":"case resetContent","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/seeother","title":"case seeOther","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/serviceunavailable","title":"case serviceUnavailable","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/siteisfrozen","title":"case siteIsFrozen","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/switchingprotocols","title":"case switchingProtocols","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/temporaryredirect","title":"case temporaryRedirect","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/tokenexpired","title":"case tokenExpired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/tooearly","title":"case tooEarly","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/toomanyrequests","title":"case tooManyRequests","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/unauthorized","title":"case unauthorized","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/unavailableforlegalreasons","title":"case unavailableForLegalReasons","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/unprocessableentity","title":"case unprocessableEntity","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/unsupportedmediatype","title":"case unsupportedMediaType","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/upgraderequired","title":"case upgradeRequired","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/uritoolong","title":"case uriTooLong","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/useproxy","title":"case useProxy","type":"case"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/variantalsonegotiates","title":"case variantAlsoNegotiates","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/init(httpresponse:)","title":"init?(HTTPResponse: HTTPURLResponse?)","type":"init"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/isclienterror","title":"var isClientError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/isinformational","title":"var isInformational: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/isredirection","title":"var isRedirection: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/isservererror","title":"var isServerError: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/issuccess","title":"var isSuccess: Bool","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/localizedreasonphrase","title":"var localizedReasonPhrase: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/certerror","title":"static let certError: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/clientclosedrequest","title":"static let clientClosedRequest: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/httptohttps","title":"static let httpToHTTPS: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/logintimeout","title":"static let loginTimeout: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/networktimeouterror","title":"static let networkTimeoutError: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/nocert","title":"static let noCert: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/noresponse","title":"static let noResponse: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/requestentitytoolarge","title":"static let requestEntityTooLarge: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/requesturitoolong","title":"static let requestURITooLong: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/requestedrangenotsatisfiable","title":"static let requestedRangeNotSatisfiable: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/retrywith","title":"static let retryWith: HTTPStatusCode","type":"property"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/twitterenhanceyourcalm","title":"static let twitterEnhanceYourCalm: HTTPStatusCode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/openweathersdk\/httpstatuscode\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openweathersdk\/httpstatuscode\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openweathersdk\/httpstatuscode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/openweathersdk\/httpstatuscode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openweathersdk\/httpstatuscode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openweathersdk\/httpstatuscode","title":"HTTPStatusCode","type":"enum"}],"path":"\/documentation\/openweathersdk","title":"OpenWeatherSDK","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}